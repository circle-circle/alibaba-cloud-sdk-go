//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package nas

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CPFSCreateFileSystem invokes the nas.CPFSCreateFileSystem API synchronously
// api document: https://help.aliyun.com/api/nas/cpfscreatefilesystem.html
func (client *Client) CPFSCreateFileSystem(request *CPFSCreateFileSystemRequest) (response *CPFSCreateFileSystemResponse, err error) {
	response = CreateCPFSCreateFileSystemResponse()
	err = client.DoAction(request, response)
	return
}

// CPFSCreateFileSystemWithChan invokes the nas.CPFSCreateFileSystem API asynchronously
// api document: https://help.aliyun.com/api/nas/cpfscreatefilesystem.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CPFSCreateFileSystemWithChan(request *CPFSCreateFileSystemRequest) (<-chan *CPFSCreateFileSystemResponse, <-chan error) {
	responseChan := make(chan *CPFSCreateFileSystemResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.CPFSCreateFileSystem(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// CPFSCreateFileSystemWithCallback invokes the nas.CPFSCreateFileSystem API asynchronously
// api document: https://help.aliyun.com/api/nas/cpfscreatefilesystem.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CPFSCreateFileSystemWithCallback(request *CPFSCreateFileSystemRequest, callback func(response *CPFSCreateFileSystemResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *CPFSCreateFileSystemResponse
		var err error
		defer close(result)
		response, err = client.CPFSCreateFileSystem(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// CPFSCreateFileSystemRequest is the request struct for api CPFSCreateFileSystem
type CPFSCreateFileSystemRequest struct {
	*requests.RpcRequest
	FsDesc      string           `position:"Query" name:"FsDesc"`
	FsSpec      string           `position:"Query" name:"FsSpec"`
	Bandwidth   requests.Integer `position:"Query" name:"Bandwidth"`
	Capacity    requests.Integer `position:"Query" name:"Capacity"`
	NetworkType string           `position:"Query" name:"NetworkType"`
	ZoneId      string           `position:"Query" name:"ZoneId"`
	VpcId       string           `position:"Query" name:"VpcId"`
	VSwitchId   string           `position:"Query" name:"VSwitchId"`
}

// CPFSCreateFileSystemResponse is the response struct for api CPFSCreateFileSystem
type CPFSCreateFileSystemResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateCPFSCreateFileSystemRequest creates a request to invoke CPFSCreateFileSystem API
func CreateCPFSCreateFileSystemRequest() (request *CPFSCreateFileSystemRequest) {
	request = &CPFSCreateFileSystemRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("NAS", "2017-06-26", "CPFSCreateFileSystem", "nas", "openAPI")
	return
}

// CreateCPFSCreateFileSystemResponse creates a response to parse from CPFSCreateFileSystem response
func CreateCPFSCreateFileSystemResponse() (response *CPFSCreateFileSystemResponse) {
	response = &CPFSCreateFileSystemResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
